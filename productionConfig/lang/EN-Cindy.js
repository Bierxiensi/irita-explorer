export const ExplorerLang = {
    common:{
        allTxStatus:'All Status1',
        success:'Success1',
        failed:'Failed1',
        allTxType:'All TxType1',
        selectDate:'Select Date1',
    },
    table:{
        emptyDescription:'- No Data -1',
        block: 'Block1',
        transactions: 'Transactions1',
        timestamp: 'Timestamp1',
        age: 'Age1',
        txHash: 'TxHash1',
        txType: 'TxType1',
        from: 'From1',
        to: 'To1',
        signer: 'Signer1',
        txTimestamp: 'Timestamp1',
        requestId: 'Request Id1',
        number:'#.',
        name: 'Moniker1',
        operator: 'Operator1',
        votingPower: 'Voting Power1',
        pubKey: 'PubKey1',
        denom: 'Denom1',
        owner: 'Owner1',
        id: 'NFT Id1',
        data: 'Data1',
        uri: 'Uri1',
        serviceName: 'Service Name1',
        provider:'Provider1',
        respondTimes:'Respond Times1',
        isAvailable:'Is Available1',
        price:'Cost Per Call1',
        minBlock:'Minimum Response Time1',
        bindTime:'Bind Time1',
        disabledTime: 'Disabled Time1',
        respondHash:'Respond Hash1',
        consumer:'Consumer1:',
        requestHash:'Request Hash1',
        requestStatus:'Request Status1',
        deposit: 'Deposit1',
        createHash:'TxHash1',
        nftCount:'NFT1',
        creator:'Creator1',
        createTime:'Timestamp1',
    },
    unit:{
        providers:'providers1',
        time:'Time1',
        blocks:'Blocks1',
        totalRespond:'Total${%value%}Responds1',
        Txs:'Txs1',
        second:'Second1',
    },
    message:{
        requestFailed:'Failed to get data, please try again later1',
    },
    Navigation:{
        block: 'Blockchain1',
        transactions: 'Transactions1',
        validators: 'Validators1',
        nftAsset: 'NFT1',
        denoms: 'Denom1',
        service: 'iService1',
        searchPlaceHolder: 'Search by Address / Txhash / Block / HashLock1',
    },
    home:{
        blockHeight: 'Block Height1',
        transactions: 'Transactions1',
        avgBlockTime: 'Avg Block Time1',
        last100Blocs: 'Last 100 Blocks1',
        validators: 'Validators1',
        services: 'iService1',
        assets: 'NFT1',
        blocks: 'Blocks1',
        viewAll: 'View All1',
        listTransactions: 'Transactions1',
    },
    block:{
        currentHeight: 'Current Height1',
    },
    blockDetail:{
        blockHash: 'Block Hash1:',
        transaction: 'Transactions1:',
        timestamp: 'Timestamp1:',
        transactions: 'Transactions1',
    },
    transactions:{
        txs: 'Txs1',
        search: 'Search1',
        status: ' Status1',
    },
    validators:{
        bonded:'Active1',
        unbonding:'Candidate1',
        unbonded:'Jailed1',
    },
    nftAsset:{
        assets: 'NFT1',
        search: 'Search1',
        placeHolder: 'Search by NFT Id1',
    },
    denom:{
        title: 'Denom',
        search: 'Search',
        placeHolder: 'Search by Denom',
    },
    service: {
        services: 'iService List1',
        from: 'From1',
        description: 'Description1',
        status: 'Status1',
        placeHolder:'Search by iService Name or Description1',
        serviceCount:' Services1',
    },
    transactionInformation:{
        transactionInformation: 'Transaction Details1',
        baseInfo:'Base Info1',
        txHash: 'TxHash1：',
        blockHeight: 'Block1：',
        status: 'Status1：',
        timestamp: 'Timestamp1：',
        signer: 'Signer1：',
        memo: 'Memo1：',
        transactionMessage: 'Transaction Message or Result1',
        relevanceTx:'Related Transaction1',
        txType: 'TxType1',
        denomId: 'Denom Id1',
        denomName: 'Denom Name1',
        from: '  From1',
        to: 'To1',
        consumer: 'Consumer1',
        provider: 'Provider1:',
        repeatedFrequency: 'Repeated Frequency1',
        repeatedTotal: 'Repeated Total1',
        serviceFeeCap: 'Service Fee Cap1',
        timeOut: 'Timeout1',
        serviceName: 'Service Name1:',
        requestContextId: 'Request Id1',
        pricing: 'Cost Per Call1',
        owner: 'Owner1',
        qos: 'Minimum Response Time1',
        deposit: 'Deposit1',
        nftId: 'NFT Id1',
        nftName: 'NFT Name1',
        data: 'Data1',
        uri: 'Uri1',
        issueDenom:{
            schema: 'Schema1',
            sender: 'Sender1',
        },
        send:{
            amount: 'Amount1',
        },
        createRecord:{
            contents:'Contents1',
        },
        callService: {
            input: 'Input1',
            repeated: 'Repeated1',
            superMode: 'SuperMode1',
        },
        respondService:{
            output: 'Output1:',
            requestId: 'Request Id1',
            result: 'Result1',
        },
        defineService: {
            description: 'Description1',
            tags: 'Tags1',
            author: 'Author1',
            authorDescription: 'Author Description1',
            schemas:'Schemas1',
        },
    },
    addressDetail: {
        addressDetail:'Address Details1',
        txRecord:'Txs1',
        consumerTitle:'iService-As Consumer1',
        providerTitle:'iService-As Provider1',
        respondRecord:'Respond Record1',
        assets: 'NFT1',
    },
    nftDetail: {
        nftInformation:'NFT Details1',
        owner: 'Owner1',
        denom: 'Denom1',
        id: 'NFT Name1',
        schema: 'Schema1',
        data: 'Data1',
        creator: 'Creator1',
        uri: 'Uri1',
        nftTxs: 'Txs1',
    },
    serviceDetail: {
        serviceDefinition: 'iService Details1',
        primary: 'Base Info1',
        author: 'Author1',
        authorDescription: 'Author Description1',
        description: 'Description1',
        name: 'Name1',
        schema: 'Schema1',
        tags: 'Tags1',
        serviceBindings: {
            serviceBindings: 'Service Binding1',
            providers: 'Providers1',
            deposit: 'Deposit1',
            owner: 'Owner1',
            pricing: 'Cost Per Call1',
            qos: 'Minimum Response Time1',
            bindTime: 'Bind Time1',
            disabledTime: 'Disabled Time1',
            hash:'Bind Details1',
        },
        serviceTransactions: 'iService Transactions1',
        hash:'Define Details1',
        height:'Define Block1',
        time:'Define Time1',
        respondRecord:'iService Respond Record1',
        provider:'Provider1',
        txRecord:'Respond Record1',
    },
    searchResult:{
        title: 'Search Results1',
        backHome: 'Back Home1',
        resultTitle: 'There is no valid result.1',
        searchTip: 'Try to search with Address, Transaction, Block Number, Proposal ID, HashLock.1',
    }
}